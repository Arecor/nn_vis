#version 430
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D img_input;
layout(rgba32f, binding = 1) uniform image2D img_output;

uniform float sample_length;
uniform float noise_strength;

highp float rand(vec2 co)
{
    highp float a = 12.9898;
    highp float b = 78.233;
    highp float c = 43758.5453;
    highp float dt= dot(co.xy, vec2(a, b));
    highp float sn= mod(dt, 3.14);
    return fract(sin(sn) * c);
}

void main() {
    int current_read_index = 0;
    int current_write_index = 0;

    float is_used = 1.0;
    do {
        vec4 next_point = imageLoad(img_input, ivec2(current_read_index++, gl_WorkGroupID.x));
        is_used = next_point.w;
        highp float noise_x = (rand(next_point.xy) - 0.5) * 2.0 * noise_strength * sample_length;
        highp float noise_y = (rand(next_point.yz) - 0.5) * 2.0 * noise_strength * sample_length;
        highp float noise_z = (rand(next_point.zx) - 0.5) * 2.0 * noise_strength * sample_length;
        next_point = vec4(next_point.x + noise_x, next_point.y + noise_y, next_point.z + noise_z, next_point.w);
        imageStore(img_output, ivec2(current_write_index++, gl_WorkGroupID.x), next_point);
    } while (is_used >= 1.0);
}