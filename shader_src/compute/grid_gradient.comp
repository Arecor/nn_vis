#version 430

struct DensityGrid
{
    int density;
    float pad1;
    float pad2;
    float pad3;
};

struct GradientGrid
{
    vec3 normalized_gradient;
    float strength;
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0) restrict readonly buffer density_grid
{
    DensityGrid density[];
};

layout(binding = 1) restrict writeonly buffer gradient_grid
{
    GradientGrid gradient[];
};

uniform int work_group_offset;
uniform ivec3 grid_cell_count;


float read(int index)
{
    return float(density[index].density);
}

float readGridIndex(ivec3 index)
{
    return density[index.x + index.y * grid_cell_count.x + index.z * grid_cell_count.x * grid_cell_count.y].density;
}

ivec3 getGridIndex(int index)
{
    int x = index % grid_cell_count.x;
    int y = ((index - x) / grid_cell_count.x) % grid_cell_count.y;
    int z = (index - x - y * grid_cell_count.x) / (grid_cell_count.x * grid_cell_count.y);
    return ivec3(x, y, z);
}

void main() {
    int index = int(gl_WorkGroupID.x) + work_group_offset;
    ivec3 grid_index = getGridIndex(index);

    float current_density = read(index);
    float gradient_x = readGridIndex(ivec3(grid_index.x + 1, grid_index.y, grid_index.z)) - current_density;
    gradient_x -= readGridIndex(ivec3(grid_index.x - 1, grid_index.y, grid_index.z)) - current_density;
    float gradient_y = readGridIndex(ivec3(grid_index.x, grid_index.y + 1, grid_index.z)) - current_density;
    gradient_y -= readGridIndex(ivec3(grid_index.x, grid_index.y - 1, grid_index.z)) - current_density;
    float gradient_z = readGridIndex(ivec3(grid_index.x, grid_index.y, grid_index.z + 1)) - current_density;
    gradient_z -= readGridIndex(ivec3(grid_index.x, grid_index.y, grid_index.z - 1)) - current_density;
    vec3 calc_gradient = vec3(gradient_x, gradient_y, gradient_z);
    float strength = length(calc_gradient);

    gradient[index].strength = strength;

    strength = max(strength, 0.00001);
    calc_gradient = calc_gradient / strength;
    gradient[index].normalized_gradient = calc_gradient;
}